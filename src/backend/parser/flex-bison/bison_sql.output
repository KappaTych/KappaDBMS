Terminals unused in grammar

   INT


Grammar

    0 $accept: input $end

    1 input: sql_stmt_list opt_semicolon

    2 sql_stmt_list: statement
    3              | sql_stmt_list ';' statement

    4 statement: create_statement
    5          | drop_statement
    6          | show_statement

    7 show_statement: SHOW TABLE table_name

    8 create_statement: CREATE TABLE table_name '(' column_def_commalist ')'

    9 column_def_commalist: column_def
   10                     | column_def_commalist ',' column_def

   11 column_def: IDENTIFIER column_type

   12 @1: %empty

   13 column_type: INTEGER @1 DOUBLE
   14            | TEXT

   15 drop_statement: DROP TABLE table_name

   16 table_name: IDENTIFIER
   17           | IDENTIFIER '.' IDENTIFIER

   18 opt_semicolon: ';'
   19              | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8
')' (41) 8
',' (44) 10
'.' (46) 17
';' (59) 3 18
error (256)
IDENTIFIER (258) 11 16 17
INT (259)
DOUBLE (260) 13
TEXT (261) 14
INTEGER (262) 13
CREATE (263) 8
TABLE (264) 7 8 15
DROP (265) 15
SHOW (266) 7


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
input (18)
    on left: 1, on right: 0
sql_stmt_list (19)
    on left: 2 3, on right: 1 3
statement (20)
    on left: 4 5 6, on right: 2 3
show_statement (21)
    on left: 7, on right: 6
create_statement (22)
    on left: 8, on right: 4
column_def_commalist (23)
    on left: 9 10, on right: 8 10
column_def (24)
    on left: 11, on right: 9 10
column_type (25)
    on left: 13 14, on right: 11
@1 (26)
    on left: 12, on right: 13
drop_statement (27)
    on left: 15, on right: 5
table_name (28)
    on left: 16 17, on right: 7 8 15
opt_semicolon (29)
    on left: 18 19, on right: 1


State 0

    0 $accept: . input $end

    CREATE  shift, and go to state 1
    DROP    shift, and go to state 2
    SHOW    shift, and go to state 3

    input             go to state 4
    sql_stmt_list     go to state 5
    statement         go to state 6
    show_statement    go to state 7
    create_statement  go to state 8
    drop_statement    go to state 9


State 1

    8 create_statement: CREATE . TABLE table_name '(' column_def_commalist ')'

    TABLE  shift, and go to state 10


State 2

   15 drop_statement: DROP . TABLE table_name

    TABLE  shift, and go to state 11


State 3

    7 show_statement: SHOW . TABLE table_name

    TABLE  shift, and go to state 12


State 4

    0 $accept: input . $end

    $end  shift, and go to state 13


State 5

    1 input: sql_stmt_list . opt_semicolon
    3 sql_stmt_list: sql_stmt_list . ';' statement

    ';'  shift, and go to state 14

    $default  reduce using rule 19 (opt_semicolon)

    opt_semicolon  go to state 15


State 6

    2 sql_stmt_list: statement .

    $default  reduce using rule 2 (sql_stmt_list)


State 7

    6 statement: show_statement .

    $default  reduce using rule 6 (statement)


State 8

    4 statement: create_statement .

    $default  reduce using rule 4 (statement)


State 9

    5 statement: drop_statement .

    $default  reduce using rule 5 (statement)


State 10

    8 create_statement: CREATE TABLE . table_name '(' column_def_commalist ')'

    IDENTIFIER  shift, and go to state 16

    table_name  go to state 17


State 11

   15 drop_statement: DROP TABLE . table_name

    IDENTIFIER  shift, and go to state 16

    table_name  go to state 18


State 12

    7 show_statement: SHOW TABLE . table_name

    IDENTIFIER  shift, and go to state 16

    table_name  go to state 19


State 13

    0 $accept: input $end .

    $default  accept


State 14

    3 sql_stmt_list: sql_stmt_list ';' . statement
   18 opt_semicolon: ';' .

    CREATE  shift, and go to state 1
    DROP    shift, and go to state 2
    SHOW    shift, and go to state 3

    $default  reduce using rule 18 (opt_semicolon)

    statement         go to state 20
    show_statement    go to state 7
    create_statement  go to state 8
    drop_statement    go to state 9


State 15

    1 input: sql_stmt_list opt_semicolon .

    $default  reduce using rule 1 (input)


State 16

   16 table_name: IDENTIFIER .
   17           | IDENTIFIER . '.' IDENTIFIER

    '.'  shift, and go to state 21

    $default  reduce using rule 16 (table_name)


State 17

    8 create_statement: CREATE TABLE table_name . '(' column_def_commalist ')'

    '('  shift, and go to state 22


State 18

   15 drop_statement: DROP TABLE table_name .

    $default  reduce using rule 15 (drop_statement)


State 19

    7 show_statement: SHOW TABLE table_name .

    $default  reduce using rule 7 (show_statement)


State 20

    3 sql_stmt_list: sql_stmt_list ';' statement .

    $default  reduce using rule 3 (sql_stmt_list)


State 21

   17 table_name: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 23


State 22

    8 create_statement: CREATE TABLE table_name '(' . column_def_commalist ')'

    IDENTIFIER  shift, and go to state 24

    column_def_commalist  go to state 25
    column_def            go to state 26


State 23

   17 table_name: IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 17 (table_name)


State 24

   11 column_def: IDENTIFIER . column_type

    TEXT     shift, and go to state 27
    INTEGER  shift, and go to state 28

    column_type  go to state 29


State 25

    8 create_statement: CREATE TABLE table_name '(' column_def_commalist . ')'
   10 column_def_commalist: column_def_commalist . ',' column_def

    ')'  shift, and go to state 30
    ','  shift, and go to state 31


State 26

    9 column_def_commalist: column_def .

    $default  reduce using rule 9 (column_def_commalist)


State 27

   14 column_type: TEXT .

    $default  reduce using rule 14 (column_type)


State 28

   13 column_type: INTEGER . @1 DOUBLE

    $default  reduce using rule 12 (@1)

    @1  go to state 32


State 29

   11 column_def: IDENTIFIER column_type .

    $default  reduce using rule 11 (column_def)


State 30

    8 create_statement: CREATE TABLE table_name '(' column_def_commalist ')' .

    $default  reduce using rule 8 (create_statement)


State 31

   10 column_def_commalist: column_def_commalist ',' . column_def

    IDENTIFIER  shift, and go to state 24

    column_def  go to state 33


State 32

   13 column_type: INTEGER @1 . DOUBLE

    DOUBLE  shift, and go to state 34


State 33

   10 column_def_commalist: column_def_commalist ',' column_def .

    $default  reduce using rule 10 (column_def_commalist)


State 34

   13 column_type: INTEGER @1 DOUBLE .

    $default  reduce using rule 13 (column_type)
