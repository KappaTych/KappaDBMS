Терминалы не используются в грамматике

   INT


Грамматика

    0 $accept: input $end

    1 input: sql_stmt_list opt_semicolon

    2 sql_stmt_list: statement
    3              | sql_stmt_list ';' statement

    4 statement: create_statement
    5          | drop_statement
    6          | show_statement

    7 show_statement: SHOW TABLE table_name

    8 create_statement: CREATE TABLE table_name '(' column_def_commalist ')'

    9 column_def_commalist: column_def
   10                     | column_def_commalist ',' column_def

   11 column_def: IDENTIFIER column_type

   12 column_type: INTEGER
   13            | DOUBLE
   14            | TEXT

   15 drop_statement: DROP TABLE table_name

   16 table_name: IDENTIFIER
   17           | IDENTIFIER '.' IDENTIFIER

   18 opt_semicolon: ';'
   19              | %empty


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'(' (40) 8
')' (41) 8
',' (44) 10
'.' (46) 17
';' (59) 3 18
error (256)
IDENTIFIER <sval> (258) 11 16 17
INT <ival> (259)
DOUBLE (260) 13
TEXT (261) 14
INTEGER (262) 12
CREATE (263) 8
TABLE (264) 7 8 15
DROP (265) 15
SHOW (266) 7


Нетерминальные символы с правилами, в которых они появляются

$accept (17)
    налево: 0
input (18)
    налево: 1, направо: 0
sql_stmt_list (19)
    налево: 2 3, направо: 1 3
statement (20)
    налево: 4 5 6, направо: 2 3
show_statement (21)
    налево: 7, направо: 6
create_statement (22)
    налево: 8, направо: 4
column_def_commalist <column_vec> (23)
    налево: 9 10, направо: 8 10
column_def <column> (24)
    налево: 11, направо: 9 10
column_type <column_type_t> (25)
    налево: 12 13 14, направо: 11
drop_statement (26)
    налево: 15, направо: 5
table_name <table_name> (27)
    налево: 16 17, направо: 7 8 15
opt_semicolon (28)
    налево: 18 19, направо: 1


State 0

    0 $accept: . input $end

    CREATE  сдвиг, и переход в состояние 1
    DROP    сдвиг, и переход в состояние 2
    SHOW    сдвиг, и переход в состояние 3

    input             переход в состояние 4
    sql_stmt_list     переход в состояние 5
    statement         переход в состояние 6
    show_statement    переход в состояние 7
    create_statement  переход в состояние 8
    drop_statement    переход в состояние 9


State 1

    8 create_statement: CREATE . TABLE table_name '(' column_def_commalist ')'

    TABLE  сдвиг, и переход в состояние 10


State 2

   15 drop_statement: DROP . TABLE table_name

    TABLE  сдвиг, и переход в состояние 11


State 3

    7 show_statement: SHOW . TABLE table_name

    TABLE  сдвиг, и переход в состояние 12


State 4

    0 $accept: input . $end

    $end  сдвиг, и переход в состояние 13


State 5

    1 input: sql_stmt_list . opt_semicolon
    3 sql_stmt_list: sql_stmt_list . ';' statement

    ';'  сдвиг, и переход в состояние 14

    $default  вывод с использованием правила 19 (opt_semicolon)

    opt_semicolon  переход в состояние 15


State 6

    2 sql_stmt_list: statement .

    $default  вывод с использованием правила 2 (sql_stmt_list)


State 7

    6 statement: show_statement .

    $default  вывод с использованием правила 6 (statement)


State 8

    4 statement: create_statement .

    $default  вывод с использованием правила 4 (statement)


State 9

    5 statement: drop_statement .

    $default  вывод с использованием правила 5 (statement)


State 10

    8 create_statement: CREATE TABLE . table_name '(' column_def_commalist ')'

    IDENTIFIER  сдвиг, и переход в состояние 16

    table_name  переход в состояние 17


State 11

   15 drop_statement: DROP TABLE . table_name

    IDENTIFIER  сдвиг, и переход в состояние 16

    table_name  переход в состояние 18


State 12

    7 show_statement: SHOW TABLE . table_name

    IDENTIFIER  сдвиг, и переход в состояние 16

    table_name  переход в состояние 19


State 13

    0 $accept: input $end .

    $default  принять


State 14

    3 sql_stmt_list: sql_stmt_list ';' . statement
   18 opt_semicolon: ';' .

    CREATE  сдвиг, и переход в состояние 1
    DROP    сдвиг, и переход в состояние 2
    SHOW    сдвиг, и переход в состояние 3

    $default  вывод с использованием правила 18 (opt_semicolon)

    statement         переход в состояние 20
    show_statement    переход в состояние 7
    create_statement  переход в состояние 8
    drop_statement    переход в состояние 9


State 15

    1 input: sql_stmt_list opt_semicolon .

    $default  вывод с использованием правила 1 (input)


State 16

   16 table_name: IDENTIFIER .
   17           | IDENTIFIER . '.' IDENTIFIER

    '.'  сдвиг, и переход в состояние 21

    $default  вывод с использованием правила 16 (table_name)


State 17

    8 create_statement: CREATE TABLE table_name . '(' column_def_commalist ')'

    '('  сдвиг, и переход в состояние 22


State 18

   15 drop_statement: DROP TABLE table_name .

    $default  вывод с использованием правила 15 (drop_statement)


State 19

    7 show_statement: SHOW TABLE table_name .

    $default  вывод с использованием правила 7 (show_statement)


State 20

    3 sql_stmt_list: sql_stmt_list ';' statement .

    $default  вывод с использованием правила 3 (sql_stmt_list)


State 21

   17 table_name: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  сдвиг, и переход в состояние 23


State 22

    8 create_statement: CREATE TABLE table_name '(' . column_def_commalist ')'

    IDENTIFIER  сдвиг, и переход в состояние 24

    column_def_commalist  переход в состояние 25
    column_def            переход в состояние 26


State 23

   17 table_name: IDENTIFIER '.' IDENTIFIER .

    $default  вывод с использованием правила 17 (table_name)


State 24

   11 column_def: IDENTIFIER . column_type

    DOUBLE   сдвиг, и переход в состояние 27
    TEXT     сдвиг, и переход в состояние 28
    INTEGER  сдвиг, и переход в состояние 29

    column_type  переход в состояние 30


State 25

    8 create_statement: CREATE TABLE table_name '(' column_def_commalist . ')'
   10 column_def_commalist: column_def_commalist . ',' column_def

    ')'  сдвиг, и переход в состояние 31
    ','  сдвиг, и переход в состояние 32


State 26

    9 column_def_commalist: column_def .

    $default  вывод с использованием правила 9 (column_def_commalist)


State 27

   13 column_type: DOUBLE .

    $default  вывод с использованием правила 13 (column_type)


State 28

   14 column_type: TEXT .

    $default  вывод с использованием правила 14 (column_type)


State 29

   12 column_type: INTEGER .

    $default  вывод с использованием правила 12 (column_type)


State 30

   11 column_def: IDENTIFIER column_type .

    $default  вывод с использованием правила 11 (column_def)


State 31

    8 create_statement: CREATE TABLE table_name '(' column_def_commalist ')' .

    $default  вывод с использованием правила 8 (create_statement)


State 32

   10 column_def_commalist: column_def_commalist ',' . column_def

    IDENTIFIER  сдвиг, и переход в состояние 24

    column_def  переход в состояние 33


State 33

   10 column_def_commalist: column_def_commalist ',' column_def .

    $default  вывод с использованием правила 10 (column_def_commalist)
